{"ast":null,"code":"var _jsxFileName = \"/Users/kartikey/Desktop/text-to-image-AI-App/frontend/src/Navbar.js\";\nimport { Button } from \"./Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Navbar({\n  showSearchPage,\n  image,\n  reset\n}) {\n  const handleDownload = async function () {\n    if (!image || image === \"sample.jpg\") return;\n    const response = await fetch(image);\n    const blob = await response.blob();\n    const blobUrl = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = blobUrl;\n    link.download = \"generated_image.png\";\n    link.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: showSearchPage ? \"searchNav\" : \"normal\",\n    children: showSearchPage ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"btnBack show\",\n        onClick: reset,\n        children: `< Back`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btnDownload show\",\n        onClick: handleDownload,\n        disabled: !image || image === \"sample.jpg\" ? true : false,\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"20\",\n          height: \"20\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M3 19L21 19V21L3 21V19ZM13 9L20 9L12 17L4 9L11 9V1L13 1L13 9Z\",\n            fill: \"currentColor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), \"Download\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["Button","jsxDEV","_jsxDEV","Fragment","_Fragment","Navbar","showSearchPage","image","reset","handleDownload","response","fetch","blob","blobUrl","URL","createObjectURL","link","document","createElement","href","download","click","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","disabled","width","height","viewBox","fill","xmlns","d","_c","$RefreshReg$"],"sources":["/Users/kartikey/Desktop/text-to-image-AI-App/frontend/src/Navbar.js"],"sourcesContent":["import { Button } from \"./Button\";\n\nexport function Navbar({ showSearchPage, image, reset }) {\n  const handleDownload = async function () {\n    if (!image || image === \"sample.jpg\") return;\n    const response = await fetch(image);\n    const blob = await response.blob();\n    const blobUrl = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = blobUrl;\n    link.download = \"generated_image.png\";\n    link.click();\n  };\n\n  return (\n    <nav className={showSearchPage ? \"searchNav\" : \"normal\"}>\n      {showSearchPage ? (\n        <>\n          <Button className=\"btnBack show\" onClick={reset}>{`< Back`}</Button>\n          <Button\n            className=\"btnDownload show\"\n            onClick={handleDownload}\n            disabled={!image || image === \"sample.jpg\" ? true : false}\n          >\n            <svg\n              width=\"20\"\n              height=\"20\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M3 19L21 19V21L3 21V19ZM13 9L20 9L12 17L4 9L11 9V1L13 1L13 9Z\"\n                fill=\"currentColor\"\n              ></path>\n            </svg>\n            Download\n          </Button>\n        </>\n      ) : null}\n    </nav>\n  );\n}\n"],"mappings":";AAAA,SAASA,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,OAAO,SAASC,MAAMA,CAAC;EAAEC,cAAc;EAAEC,KAAK;EAAEC;AAAM,CAAC,EAAE;EACvD,MAAMC,cAAc,GAAG,eAAAA,CAAA,EAAkB;IACvC,IAAI,CAACF,KAAK,IAAIA,KAAK,KAAK,YAAY,EAAE;IACtC,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACJ,KAAK,CAAC;IACnC,MAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;IAClC,MAAMC,OAAO,GAAGC,GAAG,CAACC,eAAe,CAACH,IAAI,CAAC;IACzC,MAAMI,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,IAAI,GAAGN,OAAO;IACnBG,IAAI,CAACI,QAAQ,GAAG,qBAAqB;IACrCJ,IAAI,CAACK,KAAK,CAAC,CAAC;EACd,CAAC;EAED,oBACEnB,OAAA;IAAKoB,SAAS,EAAEhB,cAAc,GAAG,WAAW,GAAG,QAAS;IAAAiB,QAAA,EACrDjB,cAAc,gBACbJ,OAAA,CAAAE,SAAA;MAAAmB,QAAA,gBACErB,OAAA,CAACF,MAAM;QAACsB,SAAS,EAAC,cAAc;QAACE,OAAO,EAAEhB,KAAM;QAAAe,QAAA,EAAG;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACpE1B,OAAA,CAACF,MAAM;QACLsB,SAAS,EAAC,kBAAkB;QAC5BE,OAAO,EAAEf,cAAe;QACxBoB,QAAQ,EAAE,CAACtB,KAAK,IAAIA,KAAK,KAAK,YAAY,GAAG,IAAI,GAAG,KAAM;QAAAgB,QAAA,gBAE1DrB,OAAA;UACE4B,KAAK,EAAC,IAAI;UACVC,MAAM,EAAC,IAAI;UACXC,OAAO,EAAC,WAAW;UACnBC,IAAI,EAAC,MAAM;UACXC,KAAK,EAAC,4BAA4B;UAAAX,QAAA,eAElCrB,OAAA;YACEiC,CAAC,EAAC,+DAA+D;YACjEF,IAAI,EAAC;UAAc;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,YAER;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACT,CAAC,GACD;EAAI;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACQ,EAAA,GAxCe/B,MAAM;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}